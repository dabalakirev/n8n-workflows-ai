{
  "name": "Test Orchestrator",
  "id": "ElnSprIVyJXKlkl3",
  "nodes": [
    {
      "id": "webhook-trigger",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [-500, 300],
      "parameters": {
        "path": "test-orchestrator",
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "typeVersion": 2
    },
    {
      "id": "parse-test-request",
      "name": "Parse Test Request",
      "type": "n8n-nodes-base.code",
      "position": [-300, 300],
      "parameters": {
        "jsCode": "// Parse and configure test request\nconst input = $json;\nconst defaultConfig = {\n  testSuite: 'full',\n  workflows: ['ai-deepseek', 'fmp-router'],\n  testData: {\n    'ai-deepseek': { \n      input: 'Test financial query: Get latest insider trading data for AAPL', \n      sessionId: 'test-' + Date.now() \n    },\n    'fmp-router': { \n      toolName: 'Insider.Trading.Latest', \n      params: { limit: 5 } \n    }\n  }\n};\n\nconst testConfig = {\n  ...defaultConfig,\n  ...input,\n  testData: { ...defaultConfig.testData, ...(input.testData || {}) }\n};\n\ntestConfig.executionId = 'exec-' + Date.now();\ntestConfig.startTime = new Date().toISOString();\n\nreturn { ...testConfig };"
      },
      "typeVersion": 2
    },
    {
      "id": "test-ai-deepseek",
      "name": "Test AI Deepseek",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [-100, 200],
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "0VAipR4PLHbtkIzw",
          "mode": "list",
          "cachedResultName": "AI Deepseek DEV"
        },
        "source": "parameter",
        "workflowInputs": {
          "input": "={{ $json.testData['ai-deepseek'].input }}",
          "sessionId": "={{ $json.testData['ai-deepseek'].sessionId }}"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "test-fmp-router",
      "name": "Test FMP Router DEV",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [-100, 400],
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "UmUET85BJqPbpRPp",
          "mode": "list",
          "cachedResultName": "FMP API Router DEV"
        },
        "source": "parameter",
        "workflowInputs": {
          "toolName": "={{ $json.testData['fmp-router'].toolName }}",
          "params": "={{ $json.testData['fmp-router'].params }}"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "generate-report",
      "name": "Generate Report",
      "type": "n8n-nodes-base.code",
      "position": [100, 300],
      "parameters": {
        "jsCode": "// Generate comprehensive test report\nconst items = $input.all();\nconst testConfig = items[1];\nconst aiDeepseekResult = items[2];\nconst fmpRouterResult = items[3];\n\nconst endTime = new Date().toISOString();\nconst totalDuration = new Date(endTime) - new Date(testConfig.json.startTime);\n\nconst report = {\n  executionId: testConfig.json.executionId,\n  timestamp: endTime,\n  totalDuration: totalDuration + 'ms',\n  testSuite: testConfig.json.testSuite,\n  testResults: {\n    'ai-deepseek': {\n      status: aiDeepseekResult.json ? 'pass' : 'fail',\n      error: aiDeepseekResult.error || null,\n      output: aiDeepseekResult.json ? 'Success' : 'Failed'\n    },\n    'fmp-router': {\n      status: fmpRouterResult.json ? 'pass' : 'fail',\n      error: fmpRouterResult.error || null,\n      output: fmpRouterResult.json ? 'Success' : 'Failed'\n    }\n  },\n  summary: {\n    total: 2,\n    passed: [aiDeepseekResult.json ? 1 : 0, fmpRouterResult.json ? 1 : 0].reduce((a,b) => a+b, 0),\n    failed: [aiDeepseekResult.json ? 0 : 1, fmpRouterResult.json ? 0 : 1].reduce((a,b) => a+b, 0)\n  }\n};\n\nreport.summary.successRate = (report.summary.passed / report.summary.total * 100).toFixed(1) + '%';\nreport.overallStatus = report.summary.failed === 0 ? 'ALL_PASSED' : 'SOME_FAILED';\n\nreturn report;"
      },
      "typeVersion": 2
    }
  ],
  "connections": {
    "Webhook": {
      "main": [[{"node": "Parse Test Request", "type": "main", "index": 0}]]
    },
    "Parse Test Request": {
      "main": [[{"node": "Test AI Deepseek", "type": "main", "index": 0}]]
    },
    "Test AI Deepseek": {
      "main": [[{"node": "Test FMP Router DEV", "type": "main", "index": 0}]]
    },
    "Test FMP Router DEV": {
      "main": [[{"node": "Generate Report", "type": "main", "index": 0}]]
    },
    "Generate Report": {"main": []}
  },
  "settings": {"executionOrder": "v1"},
  "meta": {
    "description": "Test Orchestrator - Automated testing for First Bird DEV workflows",
    "lastSyncFromN8N": "2025-08-29T15:01:22.000Z",
    "workflowId": "ElnSprIVyJXKlkl3",
    "project": "First Bird DEV",
    "webhookUrl": "POST /webhook/test-orchestrator"
  }
}