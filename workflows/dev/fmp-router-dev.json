{\n  \"name\": \"FMP API Router (DEV)\",\n  \"nodes\": [\n    {\n      \"parameters\": {},\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"typeVersion\": 1,\n      \"position\": [336, 80],\n      \"id\": \"manual-trigger-dev-456\",\n      \"name\": \"Manual Test Trigger\"\n    },\n    {\n      \"parameters\": {\n        \"workflowInputs\": {\n          \"values\": [\n            {\n              \"name\": \"toolName\"\n            },\n            {\n              \"name\": \"params\",\n              \"type\": \"object\"\n            }\n          ]\n        }\n      },\n      \"type\": \"n8n-nodes-base.executeWorkflowTrigger\",\n      \"typeVersion\": 1.1,\n      \"position\": [336, -64],\n      \"id\": \"9484af7b-42ac-408c-bff5-2403d0b65ca2\",\n      \"name\": \"When Executed by Another Workflow\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// --- \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0420\u043e\u0443\u0442\u0435\u0440\u0430 ---\\nconst FMP_BASE_URL = 'https://financialmodelingprep.com';\\n\\nconst routingTable = {\\n  'Insider.Trading.Latest': { path: '/stable/insider-trading/latest', paramIn: 'query' },\\n  'Insider.Trading.ReportingName': { path: '/stable/insider-trading/reporting-name', paramIn: 'query' },\\n  'Insider.Trading.Search': { path: '/stable/insider-trading/search', paramIn: 'query' },\\n  'Company.Profile': { path: '/stable/profile', paramIn: 'query' },\\n};\\n\\n\\n// --- \u041b\u043e\u0433\u0438\u043a\u0430 \u0420\u043e\u0443\u0442\u0435\u0440\u0430 ---\\n\\n// \u0412\u0410\u0416\u041d\u041e: API \u043a\u043b\u044e\u0447 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 n8n Credentials\\n// \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 credential \u0442\u0438\u043f\u0430 \\\"Generic Credential\\\" \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \\\"FMP API Key\\\"\\n// \u0412 \u043f\u043e\u043b\u0435 Value \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u0432\u0430\u0448 FMP API \u043a\u043b\u044e\u0447\\nconst apiKey = $credentials.fmpApiKey;\\n\\nif (!apiKey) {\\n  throw new Error('FMP API Key \u043d\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d. \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 credential \\\"FMP API Key\\\" \u0432 n8n.');\\n}\\n\\n// \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u043e\u0442 \u0430\u0433\u0435\u043d\u0442\u0430 (\u0438\u0437 \u0443\u0437\u043b\u0430 Start)  \\nconst toolName = $json.toolName;\\nconst params = $json.params || {};\\n\\n// \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c API \u043a\u043b\u044e\u0447 \u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0430\\nparams.apikey = apiKey;\\n\\nconst route = routingTable[toolName];\\nif (!route) {\\n  throw new Error(`\u041e\u0448\u0438\u0431\u043a\u0430: \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \\\"${toolName}\\\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438.`);\\n}\\n\\nlet finalUrl = FMP_BASE_URL + route.path;\\n\\nif (route.paramIn === 'query' && Object.keys(params).length > 0) {\\n  const queryParts = [];\\n  for (const k in params) {\\n    if (params[k] !== undefined && params[k] !== null) {\\n      queryParts.push(encodeURIComponent(k) + '=' + encodeURIComponent(params[k]));\\n    }\\n  }\\n  if (queryParts.length > 0) {\\n    finalUrl += '?' + queryParts.join('&');\\n  }\\n} else if (route.paramIn === 'path') {\\n  for (const k in params) {\\n    if (route.path.includes(`\\\\${\${k}}`)) {\\n      finalUrl = finalUrl.replace(`\\\\${\${k}}`, params[k]);\\n    }\\n  }\\n}\\n\\nconst output = {\\n  url: finalUrl,\\n};\\n\\nreturn output;\",\n        \"credentials\": {\n          \"fmpApiKey\": {\n            \"id\": \"PLACEHOLDER_ID\",\n            \"name\": \"FMP API Key\"\n          }\n        }\n      },\n      \"id\": \"9f62c456-1684-494a-8ae3-faa15f318508\",\n      \"name\": \"Code Router Logic\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [592, -64],\n      \"alwaysOutputData\": false\n    },\n    {\n      \"parameters\": {\n        \"url\": \"={{ $json[\\\"url\\\"] }}\\n\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.2,\n      \"position\": [832, -64],\n      \"id\": \"06da6545-14c5-4f78-ba8f-9876c7953ffc\",\n      \"name\": \"HTTP Request\"\n    }\n  ],\n  \"pinData\": {\n    \"Manual Test Trigger\": [\n      {\n        \"json\": {\n          \"toolName\": \"Insider.Trading.Latest\",\n          \"params\": {\n            \"limit\": 5\n          }\n        }\n      }\n    ]\n  },\n  \"connections\": {\n    \"Code Router Logic\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"HTTP Request\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"When Executed by Another Workflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code Router Logic\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Manual Test Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code Router Logic\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"HTTP Request\": {\n      \"main\": [[]]\n    }\n  },\n  \"active\": false,\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"a765e2c8-511d-4204-b84a-9ed4c41f5c86-dev-secure\",\n  \"meta\": {\n    \"templateCredsSetupCompleted\": false,\n    \"instanceId\": \"d3f4a3b127cb87bc84470563af6a1f06f66603f8f86e5c640a99cd751a7b3883\"\n  },\n  \"tags\": []\n}